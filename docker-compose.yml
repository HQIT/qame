services:
  # 前端应用 - 包含boardgame.io客户端
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        REACT_APP_SERVER: http://192.168.1.156:8000
        REACT_APP_API_SERVER: http://192.168.1.156:8001
    image: localhost/hqit/boardgame-frontend:latest
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_SERVER=http://192.168.1.156:8000
      - REACT_APP_API_SERVER=http://192.168.1.156:8001
    networks:
      - boardgame-network

  # boardgame.io游戏服务器 - 专门处理游戏逻辑
  game-server:
    build:
      context: ./server
      dockerfile: Dockerfile
    image: localhost/hqit/boardgame-server:latest
    ports:
      - "8000:8000"
    environment:
      - NODE_ENV=development
    networks:
      - boardgame-network

  # API服务器 - 专门处理业务逻辑（认证、AI等）
  api-server:
    build:
      context: ./api-server
      dockerfile: Dockerfile
    image: localhost/hqit/boardgame-api-server:latest
    ports:
      - "8001:8001"
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_NAME=boardgame_db
      - DB_USER=boardgame_user
      - DB_PASSWORD=boardgame_pass
      - DB_PORT=5432
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
    depends_on:
      - postgres
      - redis
    networks:
      - boardgame-network

  # PostgreSQL数据库 - 生产环境使用
  postgres:
    image: dockerpull.pw/postgres:15-alpine
    environment:
      - POSTGRES_DB=boardgame_db
      - POSTGRES_USER=boardgame_user
      - POSTGRES_PASSWORD=boardgame_pass
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - boardgame-network

  # Redis缓存 - 会话和房间状态
  redis:
    image: dockerpull.pw/redis:7-alpine
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - boardgame-network

volumes:
  postgres_data:
  redis_data:

networks:
  boardgame-network:
    driver: bridge 